1. Это процесс сохранения состояния объекта программы. Сериализация – запись текущего состояния в последовательность байт, десереализация – восстановление сохраненного состояния из последовательности байт. Осуществляется с помощью интерфейса Serializable

2. 1) создание экземпляра потока 
2) открытие потока
3) запись в поток или чтение из него
4) закрытие потока 

3. Потоки в java различаются направлением движения данных и типом данных и делятся на четыре группы: потоки ввода и потоки вывода, а также потоки символов и потоки байтов.
InputStream/OutputStream — поток для чтения/записи байтов 
Reader/Writer — поток для чтения/записи символов 

4. NIO API – усовершенствованная версия IO API, предназначенная для реализации операций с высокой производительностью.
Различия:
1) IO API – потоко-ориентированный, NIO API – буфер-ориентированный.
2) IO поддерживает (блокирующий)синхронный ввод/вывод, NIO - асинхронный ввод/вывод.
3) NIO позволяет создавать с помощью класса Selector поток, который может выбирать для обработки конкретный канал, готовый к записи и чтению.